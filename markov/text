public class MarkovModel {

    private static final int ASCII = 128;
    private ST<String, int[]> st;
    private ST<String, Integer> st2;
    private int order;

    // creates a Markov model of order k for the specified text
    public MarkovModel(String text, int k) {
        String str = "";
        order = k;
        str += text + text.substring(0, k);
        st = new ST<String, int[]>();
        st2 = new ST<String, Integer>();
        for (int i = 0; i < str.length() - k; i++) {
            String kgram = str.substring(i, i + k);
            if (!st.contains(kgram)) {
                st.put(kgram, new int[ASCII]);
            }
            st.get(kgram)[str.charAt(i + k)]++;
        }
    }

    // returns the order k of this Markov model
    public int order() {
        return order;
    }

    // returns a string representation of the Markov model (as described below)
    public String toString() {
        String result = "";
        for (String key : st.keys()) {
            StdOut.println(key);
            result += key + ": ";
            int[] frequency = st.get(key);
            for (int i = 0; i < frequency.length; i++) {
                int counter = 0;
                if (frequency[i] != 0) {
                    counter++;
                    result += key + " " + counter;
                }
            }
            result += "\n";
        }
        return result;
    }

    // returns the number of times the specified kgram appears in the text
    public int freq(String kgram) {
        return 5;
    }

    // returns the number of times the character c follows the specified
    // kgram in the text
    public int freq(String kgram, char c) {
        return 5;
    }

    // returns a random character that follows the specified kgram in the text,
    // chosen with weight proportional to the number of times that character
    // follows the specified kgram in the text
    public char random(String kgram) {
        return 'F';
    }

    // tests this class by directly calling all instance methods
    public static void main(String[] args) {
        String text1 = "gagggagaggcgagaaa";
        MarkovModel model1 = new MarkovModel(text1, 2);
        StdOut.println(model1);
    }
}
